# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Code"
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8c72644a0b2138c5f64531d3c8011890200fa183 # v1.105.0
        with:
          bundler-cache: true
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
      # Add or replace test runners here
      - name: Run tests
        run: COVERAGE=true bundle exec bin/rake
      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage
      - name: Generate coverage percentage
        run: |
          bin/rails r 'require "simplecov";puts("COV_MESSAGE=#{SimpleCov.result.covered_percent.to_i}%")' >> $GITHUB_ENV
          bin/rails r 'require "simplecov";puts("COV_COLOR=#{SimpleCov.result.covered_percent.to_i}")'  >> $GITHUB_ENV
      - name: Code Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.3.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 76542fd18be0a6db223c95ffd20e12a0
          filename: menuadmin.json
          label: Coverage
          namedLogo: codereview
          message: ${{ env.COV_MESSAGE }}
          valColorRange: ${{ env.COV_COLOR }}
          maxColorRange: 100
          minColorRange: 0

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8c72644a0b2138c5f64531d3c8011890200fa183 # v1.105.0
        with:
          bundler-cache: true
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bundle exec bundler-audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel
      - name: Rubies go faster 
        run: bundle exec fasterer
      - name: Code Review
        run: bundle exec pronto run --commit=$(git log --pretty=format:%H | tail -1)
      - name: Code smell detector
        run: bundle exec reek
      - name: Code metric tool 
        run: bundle exec rails_best_practices . -c .rails_best_practices.yml
